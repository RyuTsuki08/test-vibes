"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/keyborg";
exports.ids = ["vendor-chunks/keyborg"];
exports.modules = {

/***/ "(ssr)/./node_modules/keyborg/dist/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/keyborg/dist/esm/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KEYBORG_FOCUSIN: () => (/* binding */ KEYBORG_FOCUSIN),\n/* harmony export */   KEYBORG_FOCUSOUT: () => (/* binding */ KEYBORG_FOCUSOUT),\n/* harmony export */   createKeyborg: () => (/* binding */ createKeyborg),\n/* harmony export */   disposeKeyborg: () => (/* binding */ disposeKeyborg),\n/* harmony export */   getLastFocusedProgrammatically: () => (/* binding */ getLastFocusedProgrammatically),\n/* harmony export */   nativeFocus: () => (/* binding */ nativeFocus),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n// src/WeakRefInstance.ts\nvar _canUseWeakRef = typeof WeakRef !== \"undefined\";\nvar WeakRefInstance = class {\n  constructor(instance) {\n    if (_canUseWeakRef && typeof instance === \"object\") {\n      this._weakRef = new WeakRef(instance);\n    } else {\n      this._instance = instance;\n    }\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakRef/deref}\n   */\n  deref() {\n    var _a, _b;\n    let instance;\n    if (this._weakRef) {\n      instance = (_a = this._weakRef) == null ? void 0 : _a.deref();\n      if (!instance) {\n        delete this._weakRef;\n      }\n    } else {\n      instance = this._instance;\n      if ((_b = instance == null ? void 0 : instance.isDisposed) == null ? void 0 : _b.call(instance)) {\n        delete this._instance;\n      }\n    }\n    return instance;\n  }\n};\n\n// src/FocusEvent.ts\nvar KEYBORG_FOCUSIN = \"keyborg:focusin\";\nvar KEYBORG_FOCUSOUT = \"keyborg:focusout\";\nfunction canOverrideNativeFocus(win) {\n  const HTMLElement = win.HTMLElement;\n  const origFocus = HTMLElement.prototype.focus;\n  let isCustomFocusCalled = false;\n  HTMLElement.prototype.focus = function focus() {\n    isCustomFocusCalled = true;\n  };\n  const btn = win.document.createElement(\"button\");\n  btn.focus();\n  HTMLElement.prototype.focus = origFocus;\n  return isCustomFocusCalled;\n}\nvar _canOverrideNativeFocus = false;\nfunction nativeFocus(element) {\n  const focus = element.focus;\n  if (focus.__keyborgNativeFocus) {\n    focus.__keyborgNativeFocus.call(element);\n  } else {\n    element.focus();\n  }\n}\nfunction setupFocusEvent(win) {\n  const kwin = win;\n  if (!_canOverrideNativeFocus) {\n    _canOverrideNativeFocus = canOverrideNativeFocus(kwin);\n  }\n  const origFocus = kwin.HTMLElement.prototype.focus;\n  if (origFocus.__keyborgNativeFocus) {\n    return;\n  }\n  kwin.HTMLElement.prototype.focus = focus;\n  const shadowTargets = /* @__PURE__ */ new Set();\n  const focusOutHandler = (e) => {\n    const target = e.target;\n    if (!target) {\n      return;\n    }\n    const event = new CustomEvent(KEYBORG_FOCUSOUT, {\n      cancelable: true,\n      bubbles: true,\n      // Allows the event to bubble past an open shadow root\n      composed: true,\n      detail: {\n        originalEvent: e\n      }\n    });\n    target.dispatchEvent(event);\n  };\n  const focusInHandler = (e) => {\n    const target = e.target;\n    if (!target) {\n      return;\n    }\n    let node = e.composedPath()[0];\n    const currentShadows = /* @__PURE__ */ new Set();\n    while (node) {\n      if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        currentShadows.add(node);\n        node = node.host;\n      } else {\n        node = node.parentNode;\n      }\n    }\n    for (const shadowRootWeakRef of shadowTargets) {\n      const shadowRoot = shadowRootWeakRef.deref();\n      if (!shadowRoot || !currentShadows.has(shadowRoot)) {\n        shadowTargets.delete(shadowRootWeakRef);\n        if (shadowRoot) {\n          shadowRoot.removeEventListener(\"focusin\", focusInHandler, true);\n          shadowRoot.removeEventListener(\"focusout\", focusOutHandler, true);\n        }\n      }\n    }\n    onFocusIn(target, e.relatedTarget || void 0);\n  };\n  const onFocusIn = (target, relatedTarget, originalEvent) => {\n    var _a;\n    const shadowRoot = target.shadowRoot;\n    if (shadowRoot) {\n      for (const shadowRootWeakRef of shadowTargets) {\n        if (shadowRootWeakRef.deref() === shadowRoot) {\n          return;\n        }\n      }\n      shadowRoot.addEventListener(\"focusin\", focusInHandler, true);\n      shadowRoot.addEventListener(\"focusout\", focusOutHandler, true);\n      shadowTargets.add(new WeakRefInstance(shadowRoot));\n      return;\n    }\n    const details = {\n      relatedTarget,\n      originalEvent\n    };\n    const event = new CustomEvent(KEYBORG_FOCUSIN, {\n      cancelable: true,\n      bubbles: true,\n      // Allows the event to bubble past an open shadow root\n      composed: true,\n      detail: details\n    });\n    event.details = details;\n    if (_canOverrideNativeFocus || data.lastFocusedProgrammatically) {\n      details.isFocusedProgrammatically = target === ((_a = data.lastFocusedProgrammatically) == null ? void 0 : _a.deref());\n      data.lastFocusedProgrammatically = void 0;\n    }\n    target.dispatchEvent(event);\n  };\n  const data = kwin.__keyborgData = {\n    focusInHandler,\n    focusOutHandler,\n    shadowTargets\n  };\n  kwin.document.addEventListener(\n    \"focusin\",\n    kwin.__keyborgData.focusInHandler,\n    true\n  );\n  kwin.document.addEventListener(\n    \"focusout\",\n    kwin.__keyborgData.focusOutHandler,\n    true\n  );\n  function focus() {\n    const keyborgNativeFocusEvent = kwin.__keyborgData;\n    if (keyborgNativeFocusEvent) {\n      keyborgNativeFocusEvent.lastFocusedProgrammatically = new WeakRefInstance(\n        this\n      );\n    }\n    return origFocus.apply(this, arguments);\n  }\n  let activeElement = kwin.document.activeElement;\n  while (activeElement && activeElement.shadowRoot) {\n    onFocusIn(activeElement);\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n  focus.__keyborgNativeFocus = origFocus;\n}\nfunction disposeFocusEvent(win) {\n  const kwin = win;\n  const proto = kwin.HTMLElement.prototype;\n  const origFocus = proto.focus.__keyborgNativeFocus;\n  const keyborgNativeFocusEvent = kwin.__keyborgData;\n  if (keyborgNativeFocusEvent) {\n    kwin.document.removeEventListener(\n      \"focusin\",\n      keyborgNativeFocusEvent.focusInHandler,\n      true\n    );\n    kwin.document.removeEventListener(\n      \"focusout\",\n      keyborgNativeFocusEvent.focusOutHandler,\n      true\n    );\n    for (const shadowRootWeakRef of keyborgNativeFocusEvent.shadowTargets) {\n      const shadowRoot = shadowRootWeakRef.deref();\n      if (shadowRoot) {\n        shadowRoot.removeEventListener(\n          \"focusin\",\n          keyborgNativeFocusEvent.focusInHandler,\n          true\n        );\n        shadowRoot.removeEventListener(\n          \"focusout\",\n          keyborgNativeFocusEvent.focusOutHandler,\n          true\n        );\n      }\n    }\n    keyborgNativeFocusEvent.shadowTargets.clear();\n    delete kwin.__keyborgData;\n  }\n  if (origFocus) {\n    proto.focus = origFocus;\n  }\n}\nfunction getLastFocusedProgrammatically(win) {\n  var _a;\n  const keyborgNativeFocusEvent = win.__keyborgData;\n  return keyborgNativeFocusEvent ? ((_a = keyborgNativeFocusEvent.lastFocusedProgrammatically) == null ? void 0 : _a.deref()) || null : void 0;\n}\n\n// src/Keyborg.ts\nvar _dismissTimeout = 500;\nvar _lastId = 0;\nvar KeyborgCore = class {\n  constructor(win, props) {\n    this._isNavigatingWithKeyboard_DO_NOT_USE = false;\n    this._onFocusIn = (e) => {\n      if (this._isMouseOrTouchUsedTimer) {\n        return;\n      }\n      if (this.isNavigatingWithKeyboard) {\n        return;\n      }\n      const details = e.detail;\n      if (!details.relatedTarget) {\n        return;\n      }\n      if (details.isFocusedProgrammatically || details.isFocusedProgrammatically === void 0) {\n        return;\n      }\n      this.isNavigatingWithKeyboard = true;\n    };\n    this._onMouseDown = (e) => {\n      if (e.buttons === 0 || e.clientX === 0 && e.clientY === 0 && e.screenX === 0 && e.screenY === 0) {\n        return;\n      }\n      this._onMouseOrTouch();\n    };\n    this._onMouseOrTouch = () => {\n      const win = this._win;\n      if (win) {\n        if (this._isMouseOrTouchUsedTimer) {\n          win.clearTimeout(this._isMouseOrTouchUsedTimer);\n        }\n        this._isMouseOrTouchUsedTimer = win.setTimeout(() => {\n          delete this._isMouseOrTouchUsedTimer;\n        }, 1e3);\n      }\n      this.isNavigatingWithKeyboard = false;\n    };\n    this._onKeyDown = (e) => {\n      const isNavigatingWithKeyboard = this.isNavigatingWithKeyboard;\n      if (isNavigatingWithKeyboard) {\n        if (this._shouldDismissKeyboardNavigation(e)) {\n          this._scheduleDismiss();\n        }\n      } else {\n        if (this._shouldTriggerKeyboardNavigation(e)) {\n          this.isNavigatingWithKeyboard = true;\n        }\n      }\n    };\n    this.id = \"c\" + ++_lastId;\n    this._win = win;\n    const doc = win.document;\n    if (props) {\n      const triggerKeys = props.triggerKeys;\n      const dismissKeys = props.dismissKeys;\n      if (triggerKeys == null ? void 0 : triggerKeys.length) {\n        this._triggerKeys = new Set(triggerKeys);\n      }\n      if (dismissKeys == null ? void 0 : dismissKeys.length) {\n        this._dismissKeys = new Set(dismissKeys);\n      }\n    }\n    doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n    doc.addEventListener(\"mousedown\", this._onMouseDown, true);\n    win.addEventListener(\"keydown\", this._onKeyDown, true);\n    doc.addEventListener(\"touchstart\", this._onMouseOrTouch, true);\n    doc.addEventListener(\"touchend\", this._onMouseOrTouch, true);\n    doc.addEventListener(\"touchcancel\", this._onMouseOrTouch, true);\n    setupFocusEvent(win);\n  }\n  get isNavigatingWithKeyboard() {\n    return this._isNavigatingWithKeyboard_DO_NOT_USE;\n  }\n  set isNavigatingWithKeyboard(val) {\n    if (this._isNavigatingWithKeyboard_DO_NOT_USE !== val) {\n      this._isNavigatingWithKeyboard_DO_NOT_USE = val;\n      this.update();\n    }\n  }\n  dispose() {\n    const win = this._win;\n    if (win) {\n      if (this._isMouseOrTouchUsedTimer) {\n        win.clearTimeout(this._isMouseOrTouchUsedTimer);\n        this._isMouseOrTouchUsedTimer = void 0;\n      }\n      if (this._dismissTimer) {\n        win.clearTimeout(this._dismissTimer);\n        this._dismissTimer = void 0;\n      }\n      disposeFocusEvent(win);\n      const doc = win.document;\n      doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n      doc.removeEventListener(\"mousedown\", this._onMouseDown, true);\n      win.removeEventListener(\"keydown\", this._onKeyDown, true);\n      doc.removeEventListener(\"touchstart\", this._onMouseOrTouch, true);\n      doc.removeEventListener(\"touchend\", this._onMouseOrTouch, true);\n      doc.removeEventListener(\"touchcancel\", this._onMouseOrTouch, true);\n      delete this._win;\n    }\n  }\n  isDisposed() {\n    return !!this._win;\n  }\n  /**\n   * Updates all keyborg instances with the keyboard navigation state\n   */\n  update() {\n    var _a, _b;\n    const keyborgs = (_b = (_a = this._win) == null ? void 0 : _a.__keyborg) == null ? void 0 : _b.refs;\n    if (keyborgs) {\n      for (const id of Object.keys(keyborgs)) {\n        Keyborg.update(keyborgs[id], this.isNavigatingWithKeyboard);\n      }\n    }\n  }\n  /**\n   * @returns whether the keyboard event should trigger keyboard navigation mode\n   */\n  _shouldTriggerKeyboardNavigation(e) {\n    var _a;\n    if (e.key === \"Tab\") {\n      return true;\n    }\n    const activeElement = (_a = this._win) == null ? void 0 : _a.document.activeElement;\n    const isTriggerKey = !this._triggerKeys || this._triggerKeys.has(e.keyCode);\n    const isEditable = activeElement && (activeElement.tagName === \"INPUT\" || activeElement.tagName === \"TEXTAREA\" || activeElement.isContentEditable);\n    return isTriggerKey && !isEditable;\n  }\n  /**\n   * @returns whether the keyboard event should dismiss keyboard navigation mode\n   */\n  _shouldDismissKeyboardNavigation(e) {\n    var _a;\n    return (_a = this._dismissKeys) == null ? void 0 : _a.has(e.keyCode);\n  }\n  _scheduleDismiss() {\n    const win = this._win;\n    if (win) {\n      if (this._dismissTimer) {\n        win.clearTimeout(this._dismissTimer);\n        this._dismissTimer = void 0;\n      }\n      const was = win.document.activeElement;\n      this._dismissTimer = win.setTimeout(() => {\n        this._dismissTimer = void 0;\n        const cur = win.document.activeElement;\n        if (was && cur && was === cur) {\n          this.isNavigatingWithKeyboard = false;\n        }\n      }, _dismissTimeout);\n    }\n  }\n};\nvar Keyborg = class _Keyborg {\n  constructor(win, props) {\n    this._cb = [];\n    this._id = \"k\" + ++_lastId;\n    this._win = win;\n    const current = win.__keyborg;\n    if (current) {\n      this._core = current.core;\n      current.refs[this._id] = this;\n    } else {\n      this._core = new KeyborgCore(win, props);\n      win.__keyborg = {\n        core: this._core,\n        refs: { [this._id]: this }\n      };\n    }\n  }\n  static create(win, props) {\n    return new _Keyborg(win, props);\n  }\n  static dispose(instance) {\n    instance.dispose();\n  }\n  /**\n   * Updates all subscribed callbacks with the keyboard navigation state\n   */\n  static update(instance, isNavigatingWithKeyboard) {\n    instance._cb.forEach((callback) => callback(isNavigatingWithKeyboard));\n  }\n  dispose() {\n    var _a;\n    const current = (_a = this._win) == null ? void 0 : _a.__keyborg;\n    if (current == null ? void 0 : current.refs[this._id]) {\n      delete current.refs[this._id];\n      if (Object.keys(current.refs).length === 0) {\n        current.core.dispose();\n        delete this._win.__keyborg;\n      }\n    } else if (true) {\n      console.error(\n        `Keyborg instance ${this._id} is being disposed incorrectly.`\n      );\n    }\n    this._cb = [];\n    delete this._core;\n    delete this._win;\n  }\n  /**\n   * @returns Whether the user is navigating with keyboard\n   */\n  isNavigatingWithKeyboard() {\n    var _a;\n    return !!((_a = this._core) == null ? void 0 : _a.isNavigatingWithKeyboard);\n  }\n  /**\n   * @param callback - Called when the keyboard navigation state changes\n   */\n  subscribe(callback) {\n    this._cb.push(callback);\n  }\n  /**\n   * @param callback - Registered with subscribe\n   */\n  unsubscribe(callback) {\n    const index = this._cb.indexOf(callback);\n    if (index >= 0) {\n      this._cb.splice(index, 1);\n    }\n  }\n  /**\n   * Manually set the keyboard navigtion state\n   */\n  setVal(isNavigatingWithKeyboard) {\n    if (this._core) {\n      this._core.isNavigatingWithKeyboard = isNavigatingWithKeyboard;\n    }\n  }\n};\nfunction createKeyborg(win, props) {\n  return Keyborg.create(win, props);\n}\nfunction disposeKeyborg(instance) {\n  Keyborg.dispose(instance);\n}\n\n// src/index.ts\nvar version = \"2.6.0\";\n\n/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/keyborg/dist/esm/index.js\n");

/***/ })

};
;